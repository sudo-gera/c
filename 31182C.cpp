#define CPP_R
#include "d"
#include "biginteger.h"

auto output_time(double r){
	return to_string(r);
}


using b=BigInteger;
using r=Rational;

int main(){
// b q,w;
// q="-23534576554950000000000000009999990000999900000";
// w="8888888888884444444444433333333333332222222222222111112222777777777";
// print((q/w));
// #define BigInteger Rational
// #include "stdout.cpp"
// #undef BigInteger
// print(b(-2)+b(1))
// str(BigInteger("139248720948709238472390487290384723908472394872309487230948723904872309487239487230948723094872984723948723098472309847239847239847209348702394872093847209384720938470239874092384729308479023847230487",10)+BigInteger("-234879238749287492874923749872394723984729347923847928749283749827349827349872349873498723948723948729847293874928374928374928374928374928374928374923874923874923874923874928374928374982374928374923874923",10)),"-234739990028338783636451359385104339260820875528975619262052801103444955040385110386267775225629075745123345151829902618527688527688527719026225980051781076665539153985404688500835990253066449351076644436";
// print(BigInteger("1",10)+BigInteger("-2348",10));
// print(BigInteger("4",10)/BigInteger("2",10));
// print(BigInteger("4",10)%BigInteger("-2",10))
// print(BigInteger("100000000000000000000000000000000000000000000000000000000",10)/BigInteger("100000000000000000000000000000000000000000000000000000001",10))
// print(BigInteger("100000000000",16)/BigInteger("100000000001",16))
// b q=b("100000000000",16);
// q=0;
// print(q)
// print(b(123).toString())

// b q,w;
// std::istringstream iss2("1000000000000000000000000000000000 -1000000");
// iss2>>q>>w;
// put(q,"//",w,"==",q/w,'\n');
// std::istringstream iss3("453234523460009834520987234598234502345987029345436345634563 234523452034623049872345234520983475325345234232578");
// iss3>>q>>w;
// put(q,"//",w,"==",q/w,'\n');
// std::istringstream iss4("-23534576554950000000000000009999990000999900000 8888888888884444444444433333333333332222222222222111112222777777777");
// iss4>>q>>w;
// put(q,"//",w,"==",q/w,'\n');

// print(gcd(b(9),b(6)))

// print(BigInteger(1)/0)
// print(r("-33/44"))

// b q=b("10000000",16);
// b w=b("1100000001",16);

// print(q,w,q/w)

// r q="-1288566997890041812/350676237728747985828";
// print(gcd(q.n,q.d))
// r w="-371608337673237644826/177103278651459395620";
// put("f('",q,"')/f('",w,"')==f('",q/w,"')\n");


// print(b("00000000000000000")/"-00000000000006475ce4cdf003aa9bc0")
// print(r("0")/"-29650611427828166204352/29472131485369")


// print(str(BigInteger("-1288566997890041812/350676237728747985828",10)*BigInteger("-371608337673237644826/177103278651459395620",10)),"259113766269757985648153519929407719/33607094938809455094752136650866453070")

// print(r("2147483681359738487291469761/402365939").asDecimal(10));


print(r("-402365939/2147483681359738487291469761")%r("25"))
}
{"$message_type":"diagnostic","message":"unused import: `anyhow::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":22,"byte_end":31,"line_start":2,"line_end":2,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use anyhow::*;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":18,"byte_end":33,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use anyhow::*;","highlight_start":1,"highlight_end":15},{"text":"use std::collections::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `anyhow::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse anyhow::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":37,"byte_end":56,"line_start":3,"line_end":3,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::*;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":33,"byte_end":58,"line_start":3,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::*;","highlight_start":1,"highlight_end":25},{"text":"use object::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `object::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":62,"byte_end":71,"line_start":4,"line_end":4,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use object::*;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":58,"byte_end":73,"line_start":4,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use object::*;","highlight_start":1,"highlight_end":15},{"text":"use std::rc::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `object::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse object::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `read_buf_type` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":202,"byte_end":215,"line_start":14,"line_end":14,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"type read_buf_type = Rc<RefCell<dyn BufRead>>;","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":202,"byte_end":215,"line_start":14,"line_end":14,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"type read_buf_type = Rc<RefCell<dyn BufRead>>;","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"ReadBufType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `read_buf_type` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:14:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype read_buf_type = Rc<RefCell<dyn BufRead>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ReadBufType`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `write_buf_type` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":249,"byte_end":263,"line_start":15,"line_end":15,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"type write_buf_type = Rc<RefCell<BufWriter<dyn Write>>>;","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":249,"byte_end":263,"line_start":15,"line_end":15,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"type write_buf_type = Rc<RefCell<BufWriter<dyn Write>>>;","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":"WriteBufType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `write_buf_type` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:15:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype write_buf_type = Rc<RefCell<BufWriter<dyn Write>>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `WriteBufType`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `all_types_context` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3599,"byte_end":3616,"line_start":135,"line_end":135,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"struct all_types_context{","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3599,"byte_end":3616,"line_start":135,"line_end":135,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"struct all_types_context{","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":"AllTypesContext","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `all_types_context` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:135:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct all_types_context{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AllTypesContext`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot call non-const associated function `std::sync::Arc::<std::sync::Mutex<Config>>::new` in statics","code":{"code":"E0015","explanation":"A non-`const` function was called in a `const` context.\n\nErroneous code example:\n\n```compile_fail,E0015\nfn create_some() -> Option<u8> {\n    Some(1)\n}\n\n// error: cannot call non-const function `create_some` in constants\nconst FOO: Option<u8> = create_some();\n```\n\nAll functions used in a `const` context (constant or static expression) must\nbe marked `const`.\n\nTo fix this error, you can declare `create_some` as a constant function:\n\n```\n// declared as a `const` function:\nconst fn create_some() -> Option<u8> {\n    Some(1)\n}\n\nconst FOO: Option<u8> = create_some(); // no error!\n```\n"},"level":"error","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3380,"byte_end":3422,"line_start":125,"line_end":125,"column_start":38,"column_end":80,"is_primary":true,"text":[{"text":"static counter: Arc<Mutex<Config>> = Arc::new(Mutex::new(Config { value: 10 }));","highlight_start":38,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"calls in statics are limited to constant functions, tuple structs and tuple variants","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0015]\u001b[0m\u001b[0m\u001b[1m: cannot call non-const associated function `std::sync::Arc::<std::sync::Mutex<Config>>::new` in statics\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:125:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstatic counter: Arc<Mutex<Config>> = Arc::new(Mutex::new(Config { value: 10 }));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: calls in statics are limited to constant functions, tuple structs and tuple variants\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `type_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3681,"byte_end":3690,"line_start":141,"line_end":141,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn create_type(&mut self, type_name: String, bases: Vec<String>) -> (){","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3681,"byte_end":3690,"line_start":141,"line_end":141,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn create_type(&mut self, type_name: String, bases: Vec<String>) -> (){","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":"_type_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `type_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:141:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn create_type(&mut self, type_name: String, bases: Vec<String>) -> (){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_type_name`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bases`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3700,"byte_end":3705,"line_start":141,"line_end":141,"column_start":54,"column_end":59,"is_primary":true,"text":[{"text":"    pub fn create_type(&mut self, type_name: String, bases: Vec<String>) -> (){","highlight_start":54,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3700,"byte_end":3705,"line_start":141,"line_end":141,"column_start":54,"column_end":59,"is_primary":true,"text":[{"text":"    pub fn create_type(&mut self, type_name: String, bases: Vec<String>) -> (){","highlight_start":54,"highlight_end":59}],"label":null,"suggested_replacement":"_bases","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bases`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:141:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn create_type(&mut self, type_name: String, bases: Vec<String>) -> (){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bases`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `type_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3905,"byte_end":3914,"line_start":148,"line_end":148,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"    pub fn add_static_attr<T>(&mut self, type_name: String, attr_name: String) -> (){","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3905,"byte_end":3914,"line_start":148,"line_end":148,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"    pub fn add_static_attr<T>(&mut self, type_name: String, attr_name: String) -> (){","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"_type_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `type_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:148:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_static_attr<T>(&mut self, type_name: String, attr_name: String) -> (){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_type_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `attr_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3924,"byte_end":3933,"line_start":148,"line_end":148,"column_start":61,"column_end":70,"is_primary":true,"text":[{"text":"    pub fn add_static_attr<T>(&mut self, type_name: String, attr_name: String) -> (){","highlight_start":61,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/gera/c/paradigm/task_01/types/src/lib.rs","byte_start":3924,"byte_end":3933,"line_start":148,"line_end":148,"column_start":61,"column_end":70,"is_primary":true,"text":[{"text":"    pub fn add_static_attr<T>(&mut self, type_name: String, attr_name: String) -> (){","highlight_start":61,"highlight_end":70}],"label":null,"suggested_replacement":"_attr_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `attr_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gera/c/paradigm/task_01/types/src/lib.rs:148:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_static_attr<T>(&mut self, type_name: String, attr_name: String) -> (){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_attr_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 10 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error; 10 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0015`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0015`.\u001b[0m\n"}

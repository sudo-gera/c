class Module:
	def __init__(s):
		from pathlib import Path
		class _:
			def __init__(s):
				s.filename=str(Path.home())+'/.python_modules_db'
			def get_modules(s):
				try:
					ms=open(s.filename).read().split()
				except:
					ms=[]

				return ms
			def put_modules(s,ms):
				open(s.filename,'w').write(ms)
			def get(s,n):
				try:
					return __import__(n)
				except Exception:
					pass
				try:
					exec(f'from h import {n}')
					return eval(n)
				except Exception:
					pass
		s._=_()
	def __dir__(s):
		return s._.get_modules()
	def __getattr__(s,n):
		from pathlib import Path
		mn=n.replace('___','.')
		m=s._.get(mn)
		ms=s._.get_modules()
		if n in ms and m==None:
			ms=[w for w in ms if w!=n]
		if n not in ms and m!= None:
			ms.append(n)
		s._.put_modules(' '.join(ms))
		return m
modules=Module()
modules.sys.ps2='    '
try:
	d=HOME
except:
	exec(open(str(Path.home())+'/c/h.py'))

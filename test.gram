start[ast.Module]: a=expr_stmt* ENDMARKER { ast.Module(body=a or []) }
expr_stmt: a=expr NEWLINE { ast.Expr(value=a) }

expr:
    | l=expr '+' r=term { ast.BinOp(left=l, op=ast.Add(), right=r) }
    | l=expr '-' r=term { ast.BinOp(left=l, op=ast.Sub(), right=r) }
    | term

term:
    | l=term '*' r=factor { ast.BinOp(left=l, op=ast.Mult(), right=r) }
    | l=term '/' r=factor { ast.BinOp(left=l, op=ast.Div(), right=r) }
    | factor

factor:
    | '(' e=expr ')' { e }
    | atom

atom:
    | '0'
    | '1'
    | '2'
    | '3'
    | '4'
